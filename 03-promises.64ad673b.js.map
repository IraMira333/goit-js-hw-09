{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACXC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,OAAQJ,SAASC,cAAc,SAwBjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUC,UAEpBG,EAAO,CAAEI,SAAAR,EAAUC,S,GAEpBA,E,IA9BPT,EAAKM,OAAOW,iBAAiB,UAE7B,SAA4BC,GAC1BA,EAAIC,iBAMJ,IAJA,IAAMC,EAAQC,OAAOrB,EAAKC,aAAaqB,OACjCC,EAAOF,OAAOrB,EAAKI,YAAYkB,OAC/BE,EAASH,OAAOrB,EAAKK,cAAciB,OAEhCG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnClB,EAAckB,EADIL,GAASK,EAAI,GAAKF,GAEjCG,MAAK,SAAAC,G,IAAGC,EAAQD,EAARX,SAAUP,EAAKkB,EAALlB,MACjBX,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANtB,EAAM,M,IAE9DuB,OAAM,SAAAL,G,IAAGM,EAAQN,EAARX,SAAUP,EAAKkB,EAALlB,MAClBX,EAAA+B,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet position = 0;\nconst refs = {\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n  formEl: document.querySelector('form'),\n};\n\nrefs.formEl.addEventListener('submit', onCreatePromiseBtn);\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n\n  const delay = Number(refs.delayInputEl.value);\n  const step = Number(refs.stepInputEl.value);\n  const amount = Number(refs.amountInputEl.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const delayTime = delay + (i - 1) * step;\n    createPromise(i, delayTime)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInputEl","document","querySelector","stepInputEl","amountInputEl","formEl","$ce04d3a99e08e73b$var$createPromise","position3","delay","Promise","resolve","reject","setTimeout","Math","random","position","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","param","position1","Notify","success","concat","catch","position2","failure"],"version":3,"file":"03-promises.64ad673b.js.map"}