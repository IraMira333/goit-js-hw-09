{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEIC,EAAW,EACTC,EAAO,CACXC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,mBAAoBJ,SAASC,cAAc,0BAG7CH,EAAKM,mBAAmBC,iBAAiB,SAEzC,SAA4BC,GAC1BA,EAAIC,iBAEJ,IAAMC,EAAQC,OAAOX,EAAKC,aAAaW,OACjCC,EAAOF,OAAOX,EAAKI,YAAYQ,OAC/BE,EAASH,OAAOX,EAAKK,cAAcO,OACrCG,EAAgBL,EAAQG,EACtBG,EAAaC,aAAY,WAE7B,IADAlB,GAAY,GACGe,EAGb,OAFAI,cAAcF,QACdjB,EAAW,GAgBjB,IAAuBoB,EAAUC,GAAVD,EAZLpB,EAYeqB,EAb7BL,GAAiBF,EAcZ,IAAIQ,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEI,SAAAP,EAAUC,UAEpBG,EAAO,CAAEG,SAAAP,EAAUC,S,KAjBlBO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUN,EAAKQ,EAALR,MACjBvB,EAAAiC,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANZ,EAAM,M,IAE9Da,OAAM,SAAAL,G,IAAGM,EAAQN,EAARF,SAAUN,EAAKQ,EAALR,MAClBvB,EAAAiC,OAAOK,QAAQ,sBAAqCH,OAAfE,EAAS,QAAYF,OAANZ,EAAM,M,IAE9DgB,QAAQC,IAAItC,EAAUgB,E,GACrBA,GACHqB,QAAQC,IAAI3B,EAAOG,EAAMC,EAAQf,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet position = 0;\nconst refs = {\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n  createPromiseBtnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.createPromiseBtnEl.addEventListener('click', onCreatePromiseBtn);\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n\n  const delay = Number(refs.delayInputEl.value);\n  const step = Number(refs.stepInputEl.value);\n  const amount = Number(refs.amountInputEl.value);\n  let delayPlusStep = delay - step;\n  const intervalId = setInterval(() => {\n    position += 1;\n    if (position > amount) {\n      clearInterval(intervalId);\n      position = 0;\n      return;\n    }\n    delayPlusStep += step;\n    createPromise(position, delayPlusStep)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    console.log(position, delayPlusStep);\n  }, delayPlusStep);\n  console.log(delay, step, amount, position);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$refs","delayInputEl","document","querySelector","stepInputEl","amountInputEl","createPromiseBtnEl","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","delayPlusStep","intervalId","setInterval","clearInterval","position3","delay","Promise","resolve","reject","Math","random","position","then","param","position1","Notify","success","concat","catch","position2","failure","console","log"],"version":3,"file":"03-promises.b3cf3082.js.map"}