{"mappings":"gfAAAA,EAAA,SAEA,IAAIC,EAAW,EACTC,EAAO,CACXC,aAAcC,SAASC,cAAc,kBACrCC,YAAaF,SAASC,cAAc,iBACpCE,cAAeH,SAASC,cAAc,mBACtCG,mBAAoBJ,SAASC,cAAc,0BAG7CH,EAAKM,mBAAmBC,iBAAiB,SAEzC,SAA4BC,GAC1BA,EAAIC,iBAEJ,IAAMC,EAAQC,OAAOX,EAAKC,aAAaW,OACjCC,EAAOF,OAAOX,EAAKI,YAAYQ,OAC/BE,EAASH,OAAOX,EAAKK,cAAcO,OACrCG,EAAgBL,EACdM,EAAaC,aAAY,YAC7BlB,GAAY,GACGe,EACbI,cAAcF,IAGhBD,GAAiBF,GAAQd,EAAW,GACpCoB,QAAQC,IAAIrB,EAAUgB,G,GACrBA,GACHI,QAAQC,IAAIV,EAAOG,EAAMC,EAAQf,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nlet position = 0;\nconst refs = {\n  delayInputEl: document.querySelector('[name=\"delay\"]'),\n  stepInputEl: document.querySelector('[name=\"step\"]'),\n  amountInputEl: document.querySelector('[name=\"amount\"]'),\n  createPromiseBtnEl: document.querySelector('button[type=\"submit\"]'),\n};\n\nrefs.createPromiseBtnEl.addEventListener('click', onCreatePromiseBtn);\n\nfunction onCreatePromiseBtn(evt) {\n  evt.preventDefault();\n\n  const delay = Number(refs.delayInputEl.value);\n  const step = Number(refs.stepInputEl.value);\n  const amount = Number(refs.amountInputEl.value);\n  let delayPlusStep = delay;\n  const intervalId = setInterval(() => {\n    position += 1;\n    if (position > amount) {\n      clearInterval(intervalId);\n      return;\n    }\n    delayPlusStep += step * (position - 1);\n    console.log(position, delayPlusStep);\n  }, delayPlusStep);\n  console.log(delay, step, amount, position);\n}\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["parcelRequire","$ce04d3a99e08e73b$var$position","$ce04d3a99e08e73b$var$refs","delayInputEl","document","querySelector","stepInputEl","amountInputEl","createPromiseBtnEl","addEventListener","evt","preventDefault","delay","Number","value","step","amount","delayPlusStep","intervalId","setInterval","clearInterval","console","log"],"version":3,"file":"03-promises.fe1c1328.js.map"}